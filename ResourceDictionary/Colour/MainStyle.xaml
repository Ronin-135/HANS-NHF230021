<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--  Start: Button | Minimize | Maximize | Close  -->
    <Style x:Key="IconButtonsStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="35" />
        <Setter Property="Width" Value="35" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Name="bd"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5">
                        <Path
                            Name="ico"
                            Width="16"
                            Height="16"
                            Data="{TemplateBinding Content}"
                            Fill="{DynamicResource ActionIconColor}"
                            Stretch="Uniform" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ico" Property="Fill" Value="{DynamicResource PrimaryGrayColor}" />
                            <Setter TargetName="ico" Property="Opacity" Value="0.5" />

                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SecundaryBackgroundColor}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Tag" Value="IsCloseButton" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#F72626" />
                            <Setter TargetName="ico" Property="Fill" Value="{DynamicResource PrimaryBackgroundColor}" />
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ico" Property="Fill" Value="{DynamicResource PrimaryBackgroundColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  End: Button | Minimize | Maximize | Close  -->

    <!--  Start: Menu Icon  -->
    <Style x:Key="MenuIconStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <Viewbox
                            Width="20"
                            Height="20"
                            Margin="0,6,0,0"
                            Stretch="UniformToFill">
                            <Canvas Width="512" Height="512">
                                <Path
                                    x:Name="ico"
                                    Margin="0,0,0,0"
                                    Data="m32 0h448c17.671875 0 32 14.328125 32 32s-14.328125 32-32 32h-448c-17.671875 0-32-14.328125-32-32s14.328125-32 32-32zm0 0"
                                    Fill="{DynamicResource PrimaryGrayColor}" />
                                <Path
                                    x:Name="ico1"
                                    Margin="0,20,0,0"
                                    Data="m32 128h448c17.671875 0 32 14.328125 32 32s-14.328125 32-32 32h-448c-17.671875 0-32-14.328125-32-32s14.328125-32 32-32zm0 0"
                                    Fill="{DynamicResource PrimaryGrayColor}" />
                                <Path
                                    x:Name="ico2"
                                    Margin="0,40,0,0"
                                    Data="m32 256h448c17.671875 0 32 14.328125 32 32s-14.328125 32-32 32h-448c-17.671875 0-32-14.328125-32-32s14.328125-32 32-32zm0 0"
                                    Fill="{DynamicResource PrimaryGrayColor}" />
                            </Canvas>
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="Transparent" />
                            <Setter TargetName="border" Property="BorderBrush" Value="#FFFFFF" />
                            <Setter TargetName="ico" Property="Fill" Value="{DynamicResource PrimaryBlueColor}" />
                            <Setter TargetName="ico1" Property="Fill" Value="{DynamicResource PrimaryBlueColor}" />
                            <Setter TargetName="ico2" Property="Fill" Value="{DynamicResource PrimaryBlueColor}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="Background" Value="Transparent" />
                            <Setter TargetName="border" Property="BorderBrush" Value="#FFFFFF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  End: Menu Icon  -->

    <!--  Start: VerticalMenuStyle  -->
    <Style x:Key="MenuRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryGrayColor}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border
                        Visibility="{TemplateBinding Visibility}"
                        x:Name="menuButton"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="45" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <!--  Selected  -->
                            <Border
                                x:Name="btnSelected"
                                Grid.ColumnSpan="2"
                                Width="210"
                                HorizontalAlignment="Right"
                                CornerRadius="4" />

                            <!--  Indicator  -->
                            <Rectangle
                                Name="Indicator"
                                Width="4"
                                Height="40"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                RadiusX="2"
                                RadiusY="2" />

                            <!--  Icon  -->
                            <Path
                                x:Name="Icon"
                                Width="20"
                                Height="20"
                                Margin="0,0,5,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"
                                Fill="{DynamicResource PrimaryGrayColor}"
                                Stretch="Fill" />

                            <!--  Text  -->
                            <TextBlock
                                x:Name="txtName"
                                Grid.Column="1"
                                Margin="15,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                FontSize="{TemplateBinding FontSize}"
                                FontWeight="{TemplateBinding FontWeight}"
                                Foreground="{TemplateBinding Foreground}"
                                Text="{TemplateBinding Content}" />
                            <Grid Grid.Column="1" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter TargetName="txtName" Property="Foreground" Value="{DynamicResource PrimaryBlueColor}" />
                            <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource PrimaryBlueColor}" />
                            <Setter TargetName="txtName" Property="Opacity" Value="0.6" />
                            <Setter TargetName="Icon" Property="Opacity" Value="0.6" />

                            <Setter TargetName="Indicator" Property="Opacity" Value="0.6" />
                            <Setter TargetName="Indicator" Property="Fill" Value="{DynamicResource PrimaryBlueColor}" />
                            <Setter TargetName="Indicator" Property="Height" Value="20" />-->
                            <Setter TargetName="btnSelected" Property="Background" Value="{DynamicResource SecundaryGrayColor}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource PrimaryBlueColor}" />
                            <Setter TargetName="Indicator" Property="Fill" Value="{DynamicResource PrimaryBlueColor}" />
                            <Setter TargetName="Indicator" Property="Height" Value="20" />
                            <Setter TargetName="btnSelected" Property="Background" Value="{DynamicResource SecundaryGrayColor}" />
                            <Setter TargetName="txtName" Property="Foreground" Value="{DynamicResource PrimaryBlueColor}" />
                        </Trigger>
                        <!--  来回滚动动画  -->
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="RadioButton.IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard x:Name="Start_Uppercase_Indicator">
                                    <Storyboard>
                                        <DoubleAnimation
                                            DecelerationRatio="0.6"
                                            Storyboard.TargetName="Indicator"
                                            Storyboard.TargetProperty="Width"
                                            From="0"
                                            To="160"
                                            Duration="0:0:1" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <RemoveStoryboard BeginStoryboardName="Stop_Indicator" />
                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>
                                <BeginStoryboard x:Name="Stop_Uppercase_Indicator">
                                    <Storyboard>
                                        <DoubleAnimation
                                            DecelerationRatio="0.6"
                                            Storyboard.TargetName="Indicator"
                                            Storyboard.TargetProperty="Width"
                                            From="160"
                                            To="0"
                                            Duration="0:0:1" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <RemoveStoryboard BeginStoryboardName="Release_Indicator" />
                            </MultiTrigger.ExitActions>

                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>

                                <Condition Property="RadioButton.IsChecked" Value="True" />

                            </MultiTrigger.Conditions>

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard x:Name="Lock_Indicator">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Indicator"
                                            Storyboard.TargetProperty="Width"
                                            From="160"
                                            To="165"
                                            Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>
                                <BeginStoryboard x:Name="Release_Indicator">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Indicator"
                                            Storyboard.TargetProperty="Width"
                                            From="165"
                                            To="160"
                                            Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <BeginStoryboard x:Name="Stop_Indicator">
                                    <Storyboard>
                                        <DoubleAnimation
                                            BeginTime="0:0:0.5"
                                            Storyboard.TargetName="Indicator"
                                            Storyboard.TargetProperty="Width"
                                            From="160"
                                            To="0"
                                            Duration="0:0:1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>

                        </MultiTrigger>-->
                        <!--  来回滚动动画  -->

                    </ControlTemplate.Triggers>


                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  End: VerticalMenuStyle  -->

    <!--  启动停止复位整机重置  -->
    <Style x:Key="TopRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryGrayColor}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="25" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border
                        Visibility="{TemplateBinding Visibility}"
                        x:Name="menuButton"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="45" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <!--  Selected  -->
                            <Border
                                x:Name="btnSelected"
                                Grid.ColumnSpan="2"
                                Width="210"
                                HorizontalAlignment="Right"
                                CornerRadius="4" />

                            <!--  Icon  -->
                            <Path
                                x:Name="Icon"
                                Width="25"
                                Height="25"
                                Margin="0,0,5,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"
                                Fill="{DynamicResource PrimaryGrayColor}"
                                Stretch="Fill" />

                            <!--  Text  -->
                            <TextBlock
                                x:Name="txtName"
                                Grid.Column="1"
                                Margin="10,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                FontSize="{TemplateBinding FontSize}"
                                FontWeight="{TemplateBinding FontWeight}"
                                Foreground="{TemplateBinding Foreground}"
                                Text="{TemplateBinding Content}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="txtName" Property="Foreground" Value="{DynamicResource PrimaryGrayColor}" />
                            <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource PrimaryGrayColor}" />
                            <Setter TargetName="txtName" Property="Opacity" Value="0.5" />
                            <Setter TargetName="Icon" Property="Opacity" Value="0.5" />

                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="txtName" Property="Foreground" Value="{DynamicResource PrimaryBlueColor}" />
                            <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource PrimaryBlueColor}" />
                     
                            <!-- Optional
                        <Setter TargetName="Indicator" Property="Fill" Value="red"/>
                        <Setter TargetName="Indicator" Property="Height" Value="20"/>-->
                        </Trigger>
                        <!--<Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource PrimaryBlueColor}" />
                            <Setter TargetName="btnSelected" Property="Background" Value="{DynamicResource SecundaryGrayColor}" />
                            <Setter TargetName="txtName" Property="Foreground" Value="{DynamicResource PrimaryBlueColor}" />
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  显示提示信息  -->
    <Style x:Key="tt_style" TargetType="ToolTip">

        <Setter Property="Placement" Value="Right" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Margin" Value="20,0,0,0" />
        <Setter Property="Background" Value="#4A5668" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontFamily" Value="Fonts/Roboto-Light.ttf #Roboto" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="PlacementRectangle" Value="60,0,0,0" />
        <Setter Property="HorizontalOffset" Value="15" />
        <Setter Property="VerticalOffset" Value="6" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />

    </Style>

    <!--  登录button  -->
    <Style x:Key="loginBtnStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <StackPanel Orientation="Horizontal">
                        <Ellipse
                            Width="40"
                            Height="40"
                            Margin="10,0,0,0">
                            <Ellipse.Fill>
                                <ImageBrush ImageSource="/Image/avatar.png" />
                            </Ellipse.Fill>
                        </Ellipse>
                        <!--<StackPanel Margin="8,0,0,0" Orientation="Vertical">
                            <Label
                                Name="nameText"
                                HorizontalAlignment="Left"
                                HorizontalContentAlignment="Center"
                                Content="{TemplateBinding Content}"
                                FontSize="14"
                                FontWeight="SemiBold"
                                Foreground="{DynamicResource TextPrimaryColor}" />
                            <Label
                                Margin="0,-10,0,0"
                                HorizontalAlignment="Left"
                                HorizontalContentAlignment="Center"
                                Content="scarlettgwen@gmail.com"
                                FontSize="11"
                                FontWeight="Regular"
                                Foreground="{DynamicResource PrimaryGrayColor}" />
                        </StackPanel>-->
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>